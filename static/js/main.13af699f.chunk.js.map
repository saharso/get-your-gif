{"version":3,"sources":["models/appContext.ts","models/actions.enum.ts","actions/favorites.ts","ui/loader/loader.tsx","models/store.ts","actions/arrayFromMap.ts","components/header/headerCompoment.tsx","components/main/mainCompoment.tsx","models/routes.ts","actions/history.ts","models/reducer.ts","App.tsx","reportWebVitals.js","index.tsx"],"names":["initialState","store","AppContext","React","createContext","state","dispatch","undefined","ActionsEnum","updateLocalStorage","localStorage","setItem","JSON","stringify","arrayFromMap","favoritesMap","getFavoritesFromLocalStorage","favorites","parse","getItem","Array","isArray","Map","map","forEach","e","set","id","action","clonedState","add","payload","isFavorite","remove","delete","Loader","className","aria-label","searchQuery","searchHistory","from","HeaderComponent","title","routes","useContext","useState","isActive","setIsActive","src","alt","route","index","classnames","to","onClick","size","MainComponent","Component","component","exact","path","render","fallback","lazy","historySet","Set","reducer","type","SEARCH_QUERY","ADD_TO_FAVORITES","REMOVE_FROM_FAVORITES","UPDATE_HISTORY","clone","history","Error","App","useReducer","Provider","value","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13af699f.chunk.js","sourcesContent":["import React from 'react';\nimport store from './store';\n\nexport const initialState = store;\nexport const AppContext = React.createContext<any>({state: initialState, dispatch: undefined});","enum ActionsEnum {\n    SEARCH_QUERY = 'searchQuery',\n    UPDATE_HISTORY = 'updateHistory',\n    ADD_TO_FAVORITES = 'addToFavorites',\n    REMOVE_FROM_FAVORITES = 'removeFromFavorites',\n}\n\nexport default ActionsEnum;","import GifItemSchema from '../models/gifItemSchema';\nimport { StateModel } from '../models/store';\nimport IAction from '../ts/actions.interface';\nimport arrayFromMap from './arrayFromMap';\n\nfunction updateLocalStorage(state: StateModel){\n    localStorage.setItem('favorites', JSON.stringify(arrayFromMap(state.favoritesMap)));\n}\nexport function getFavoritesFromLocalStorage(){\n    const favorites = JSON.parse(localStorage.getItem('favorites') || '[]');\n    if(!Array.isArray(favorites)) return new Map();\n    const map = new Map();\n    favorites.forEach((e: GifItemSchema) => map.set(e.id, e));\n    return map;\n} \nexport default function favorites(state: StateModel, action: IAction){\n    let clonedState: StateModel;\n   \n    function add (){\n        clonedState = {...state};\n        clonedState.favoritesMap.set(action.payload.id, action.payload);\n        action.payload.isFavorite = true;\n        updateLocalStorage(clonedState);\n        return clonedState;\n    }\n    function remove(){\n        clonedState = {...state};\n        clonedState.favoritesMap.delete(action.payload.id);\n        action.payload.isFavorite = false;\n        updateLocalStorage(clonedState);\n        return clonedState;;\n    }\n    return {\n        add, remove, getFavoritesFromLocalStorage,\n    }\n}","\nimport './loader.scss';\nconst Loader = ()=> <div className=\"ui-spinner\" aria-label=\"loading\"></div>\nexport default Loader;","import {getFavoritesFromLocalStorage} from \"../actions/favorites\";\nimport GifItemSchema from \"./gifItemSchema\";\n\nexport interface StateModel {\n    searchQuery: string;\n    readonly favoritesMap: Map<string, GifItemSchema>,\n    readonly searchHistory: Array<string>,\n}\nconst store: StateModel = {\n    searchQuery: '',\n    favoritesMap: new Map(getFavoritesFromLocalStorage()),\n    searchHistory: [],\n}\nexport default store;","export default function arrayFromMap(map: Map<any, any>): any {\n    return Array.from(map, ([name, value]) => value);\n}","import './headerComponent.scss';\nimport React, {useState, useContext} from 'react';\nimport IRoute from '../../ts/route.interface';\nimport { Link } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { AppContext } from '../../models/appContext';\n\nexport type IHeaderProps = {\n    title?: string;\n    routes: IRoute[];\n}\nconst HeaderComponent: React.FunctionComponent<IHeaderProps> = ({title, routes}) => {\n\n    const { state, dispatch } = useContext(AppContext);\n    const [isActive, setIsActive] = useState(0);\n\n    function getFavoriteCounter(to?: string){\n        return to === '/favorites' ? ` (${state.favoritesMap.size})` : '';\n    }\n\n    return <header className=\"gyg-header\">\n        <div className=\"app-header__top\">\n            <img className=\"app-header__logo\" \n                src=\"https://media1.giphy.com/media/3o7ZeQBhbVGnELP4bK/giphy.gif?cid=dce653c9igqtyhssh9441s2osnslbpbvh6cgms5cvvqsaa8j&rid=giphy.gif&ct=g\"\n                alt=\"logo\"\n            />\n            <div className=\"app-header__text space-endGap-big\">\n                <h1 className=\"app-header__title\">{title}</h1>\n                <p className=\"app-header__caption\">\n                    Search Millions of Gifs!\n                </p>\n            </div>\n            <div className=\"layout-fillEmpty\" id=\"portal-element\"></div>\n        </div>\n\n        <nav className=\"app-header__menu\">\n            {\n                routes && routes.map((route, index) =>(\n                    <Link \n                        className={\n                            classnames('app-header__menuItem', {'is-active': index === isActive})\n                        }\n                        key={route.to}\n                        to={route.to}\n                        onClick={()=>{setIsActive(index)}}\n                    >{route.title} {getFavoriteCounter(route.to)}</Link>\n                ))\n            }\n        </nav>\n\n    </header>\n}\n\nexport default HeaderComponent;","import React, {Suspense} from \"react\";\nimport IRoute from '../../ts/route.interface';\nimport {Route, Switch} from \"react-router-dom\";\nimport Loader from \"../../ui/loader/loader\";\n\nexport type IHeaderProps = {\n    routes: IRoute[];\n}\nconst MainComponent: React.FunctionComponent<IHeaderProps> = ({routes}) => {\n    return <main className=\"gyg-main layout-scrollY\">\n        <Switch>\n            {\n            routes && routes.map(route => {\n                const Component = route.component;\n                return <Route exact path={route.to} key={route.to} render={()=><Suspense fallback={<><Loader/></>}><Component/></Suspense>} />\n            })\n            }\n        </Switch>\n    </main>\n}\n\nexport default MainComponent;","import React from 'react';\nimport IRoute from '../ts/route.interface';\n\nconst routes: IRoute[] = [\n    {\n        title: 'Search Gifs',\n        to: '/',\n        component: React.lazy(() => import('../components/routes/searchRoute/searchRoute')),\n    },\n    {\n        title: 'Favorites',\n        to: '/favorites',\n        component: React.lazy(() => import('../components/routes/favoritesRoute/favoritesRoute')),\n    },\n];\n\nexport default routes;","import { StateModel } from '../models/store';\nimport IAction from '../ts/actions.interface';\n\nconst historySet = new Set<string>();\n\nexport default function history(state: StateModel, action: IAction){\n    const clone = {...state};\n    if(!action.payload) return clone; \n    historySet.add(action.payload);\n    clone.searchHistory = Array.from(historySet);\n    \n    return clone;\n}","import { StateModel } from './store';\nimport ActionsEnum from './actions.enum';\nimport IAction from '../ts/actions.interface';\nimport favorites from '../actions/favorites';\nimport history from '../actions/history';\n\nfunction reducer(state: StateModel, action: IAction): StateModel {\n    switch (action.type) {\n      case ActionsEnum.SEARCH_QUERY: return {...state, searchQuery: action.payload};\n      case ActionsEnum.ADD_TO_FAVORITES: return favorites(state as StateModel, action).add()\n      case ActionsEnum.REMOVE_FROM_FAVORITES: return favorites(state, action).remove();\n      case ActionsEnum.UPDATE_HISTORY: return history(state, action);\n      default:\n        throw new Error();\n    }\n}\n\nexport default reducer;","\nimport './App.scss';\nimport React, {useReducer} from 'react';\nimport { BrowserRouter } from \"react-router-dom\";\nimport HeaderComponent from './components/header/headerCompoment';\nimport MainComponent from \"./components/main/mainCompoment\";\nimport routes from './models/routes';\nimport reducer from './models/reducer';\nimport { AppContext, initialState } from './models/appContext';\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return <AppContext.Provider value={{state, dispatch}}>\n      <BrowserRouter basename=\"/get-your-gif\">\n        <div className=\"gyg-wrapper\">\n          <HeaderComponent title=\"Get your Gif\" routes={routes}/>\n          <MainComponent routes={routes}/>\n        </div>\n      </BrowserRouter>\n    </AppContext.Provider>\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}